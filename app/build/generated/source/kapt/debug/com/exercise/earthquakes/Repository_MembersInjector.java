// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package com.exercise.earthquakes;

import com.exercise.earthquakes.network.EarthquakeRequestParams;
import com.exercise.earthquakes.network.clients.BaseClient;
import dagger.MembersInjector;
import javax.inject.Provider;

public final class Repository_MembersInjector implements MembersInjector<Repository> {
  private final Provider<BaseClient> mEarthquakeClientProvider;

  private final Provider<EarthquakeRequestParams> mEarthquakeRequestParamsProvider;

  public Repository_MembersInjector(
      Provider<BaseClient> mEarthquakeClientProvider,
      Provider<EarthquakeRequestParams> mEarthquakeRequestParamsProvider) {
    assert mEarthquakeClientProvider != null;
    this.mEarthquakeClientProvider = mEarthquakeClientProvider;
    assert mEarthquakeRequestParamsProvider != null;
    this.mEarthquakeRequestParamsProvider = mEarthquakeRequestParamsProvider;
  }

  public static MembersInjector<Repository> create(
      Provider<BaseClient> mEarthquakeClientProvider,
      Provider<EarthquakeRequestParams> mEarthquakeRequestParamsProvider) {
    return new Repository_MembersInjector(
        mEarthquakeClientProvider, mEarthquakeRequestParamsProvider);
  }

  @Override
  public void injectMembers(Repository instance) {
    if (instance == null) {
      throw new NullPointerException("Cannot inject members into a null reference");
    }
    instance.mEarthquakeClient = mEarthquakeClientProvider.get();
    instance.mEarthquakeRequestParams = mEarthquakeRequestParamsProvider.get();
  }
}
