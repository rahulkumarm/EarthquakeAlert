// Generated by dagger.internal.codegen.ComponentProcessor (https://google.github.io/dagger).
package io.github.adamshurwitz.retrorecycler.dependencyinjection;

import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import okhttp3.OkHttpClient;
import retrofit2.Retrofit;

public final class RetrofitClientDataModule_ProvideRetrofitFactory implements Factory<Retrofit> {
  private final RetrofitClientDataModule module;

  private final Provider<OkHttpClient> arg0Provider;

  public RetrofitClientDataModule_ProvideRetrofitFactory(
      RetrofitClientDataModule module, Provider<OkHttpClient> arg0Provider) {
    assert module != null;
    this.module = module;
    assert arg0Provider != null;
    this.arg0Provider = arg0Provider;
  }

  @Override
  public Retrofit get() {
    return Preconditions.checkNotNull(
        module.provideRetrofit(arg0Provider.get()),
        "Cannot return null from a non-@Nullable @Provides method");
  }

  public static Factory<Retrofit> create(
      RetrofitClientDataModule module, Provider<OkHttpClient> arg0Provider) {
    return new RetrofitClientDataModule_ProvideRetrofitFactory(module, arg0Provider);
  }
}
